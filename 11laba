import tkinter as tk
import random

LADDERS = {1: 38, 4: 14, 9: 31, 21: 42, 28: 84, 36: 44, 51: 67, 71: 91, 80: 100}
SNAKES = {16: 6, 47: 26, 49: 11, 56: 53, 62: 19, 64: 60, 87: 24, 93: 73, 95: 75, 98: 78}

def roll_dice():
    return random.randint(1, 6)

class SnakesAndLaddersGame(tk.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.master = master
        self.init_game()
        self.create_widgets()

    def init_game(self):
        self.player1_position = 0
        self.player2_position = 0
        self.current_player = 1
        self.dice_roll = 0
        self.info_label = None

    def create_widgets(self):
        self.canvas = tk.Canvas(self, width=500, height=500, bg='white')
        self.canvas.pack()

        self.roll_button = tk.Button(self, text="Бросить кубик", command=self.play_turn)
        self.roll_button.pack(side="bottom")

        self.dice_label = tk.Label(self, text="")
        self.dice_label.pack(side="bottom")

        self.info_label = tk.Label(self, text="")
        self.info_label.pack(side="bottom")

        self.player1_label = tk.Label(self, text="Игрок 1: 0")
        self.player1_label.pack(side="left")

        self.player2_label = tk.Label(self, text="Игрок 2: 0")
        self.player2_label.pack(side="right")

        self.draw_board()

    def draw_board(self):
        square_number = 1
        for row in range(9, -1, -1):
            for col in range(10):
                x1 = col * 50
                y1 = row * 50
                x2 = x1 + 50
                y2 = y1 + 50

                if square_number in SNAKES:
                    color = 'yellow'
                elif square_number in LADDERS:
                    color = 'green'
                else:
                    color = 'white'

                self.canvas.create_rectangle(x1, y1, x2, y2, fill=color, outline="black")

                self.canvas.create_text(x1 + 25, y1 + 25, text=str(square_number), font=('Helvetica', '8'))

                square_number += 1
    def get_cell_coordinates(self, position):
        row = (position - 1) // 10
        col = (position - 1) % 10 if row % 2 != 9 else 9 - (position - 1) % 10
        x = col * 50 + 25
        y = (9 - row) * 50 + 25
        return x, y

    def update_player_position(self, player, position):
        self.canvas.delete(f"player{player}")
        x, y = self.get_cell_coordinates(position)
        color = "red" if player == 1 else "blue"
        self.canvas.create_oval(x - 10, y - 10, x + 10, y + 10, fill=color, tags=f"player{player}")

    def play_turn(self):
        self.dice_roll = roll_dice()
        self.dice_label.config(text=f"Выпало очков: {self.dice_roll}")
        player_pos = self.player1_position if self.current_player == 1 else self.player2_position
        player_pos += self.dice_roll
        old_pos = player_pos

        if player_pos in SNAKES:
            self.info_label.config(text=f"Упс! Вы попали на змею с клетки {player_pos} на {SNAKES[player_pos]}")
            player_pos = SNAKES[player_pos]
        elif player_pos in LADDERS:
            self.info_label.config(text=f"Ура! Вы попали на лестницу с клетки {player_pos} на {LADDERS[player_pos]}")
            player_pos = LADDERS[player_pos]
        else:
            self.info_label.config(text="Вы попали на обычную клетку")

        if self.current_player == 1:
            self.player1_position = player_pos
            self.update_player_position(1, self.player1_position)
            self.player1_label.config(text=f"Игрок 1: {self.player1_position}")
            if self.player1_position >= 100:
                self.end_game(1)
            self.current_player = 2
        else:
            self.player2_position = player_pos
            self.update_player_position(2, self.player2_position)
            self.player2_label.config(text=f"Игрок 2: {self.player2_position}")
            if self.player2_position >= 100:
                self.end_game(2)
            self.current_player = 1

    def end_game(self, winner):
        self.roll_button.config(state="disabled")
        self.dice_label.config(text="")
        self.info_label.config(text="")
        self.canvas.create_text(250, 250, text=f"Игрок {winner} победил!", font=("Helvetica", 24), fill="green")

def main():
    root = tk.Tk()
    root.title("Змеи и Лестницы")

    window_width = 500
    window_height = 600

    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()

    x = (screen_width - window_width) // 2
    y = (screen_height - window_height) // 2

    root.geometry(f"{window_width}x{window_height}+{x}+{y}")

    game = SnakesAndLaddersGame(master=root)
    game.pack()
    root.mainloop()

if __name__ == "__main__":
    main()
